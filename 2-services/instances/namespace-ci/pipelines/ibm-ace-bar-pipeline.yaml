apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: is-build
spec:
  params:
  - name: is-source-repo-url
    type: string
  - default: is-source
    name: is-source-directory
    type: string
  - name: is-source-repo-private-key
    type: string
  - name: is-infra-repo-url
    type: string
  - default: is-infra
    name: is-infra-directory
    type: string
  - name: is-infra-repo-private-key
    type: string
  - name: is-config-repo-url
    type: string
  - default: is-config
    name: is-config-directory
    type: string
  - name: is-config-repo-private-key
    type: string
  - default: Dockerfile
    name: dockerfile-relative-path-to-infra
    type: string
  - name: key-certs-secret-name
    type: string
  - name: client-key
    type: string
  - name: client-cert
    type: string
  - name: ca-cert
    type: string
  tasks:
  - name: clone-is-source
    params:
    - name: url
      value: $(params.is-source-repo-url)
    - name: subdirectory
      value: $(params.is-source-directory)
    - name: deleteExisting
      value: "true"
    - name: sshPrivateKey
      value: $(params.is-source-repo-private-key)
    taskRef:
      kind: Task
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-workspace
  - name: clone-is-infra
    params:
    - name: url
      value: $(params.is-infra-repo-url)
    - name: subdirectory
      value: $(params.is-infra-directory)
    - name: deleteExisting
      value: "true"
    - name: sshPrivateKey
      value: $(params.is-infra-repo-private-key)
    taskRef:
      kind: Task
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-workspace
  - name: clone-is-config
    params:
    - name: url
      value: $(params.is-config-repo-url)
    - name: subdirectory
      value: $(params.is-config-directory)
    - name: deleteExisting
      value: "true"
    - name: sshPrivateKey
      value: $(params.is-config-repo-private-key)
    taskRef:
      kind: Task
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-workspace
  - name: resolve-props
    params:
    - name: is-source-directory
      value: $(params.is-source-directory)
    runAfter:
    - clone-is-source
    taskRef:
      kind: Task
      name: resolve-props
    workspaces:
    - name: input
      workspace: shared-workspace
  - name: generate-bar
    params:
    - name: is-source-directory
      value: $(params.is-source-directory)
    - name: is-application-names
      value: $(tasks.resolve-props.results.is-application-names)
    - name: bar-location
      value: $(workspaces.workspace.path)/bars
    - name: bar-filename
      value: $(tasks.resolve-props.results.release-name).bar
    runAfter:
    - resolve-props
    taskRef:
      kind: Task
      name: generate-bar
    workspaces:
    - name: workspace
      workspace: shared-workspace
  - name: build-is-image
    params:
    - name: TLSVERIFY
      value: "false"
    - name: IMAGE
      value: $(tasks.resolve-props.results.registry-host)/$(context.pipelineRun.namespace)/$(tasks.resolve-props.results.release-name):$(tasks.clone-is-source.results.commit)
    - name: DOCKERFILE
      value: $(workspaces.source.path)/$(params.is-infra-directory)/$(params.dockerfile-relative-path-to-infra)
    - name: CONTEXT
      value: $(workspaces.source.path)/bars
    runAfter:
    - generate-bar
    taskRef:
      kind: ClusterTask
      name: buildah
    workspaces:
    - name: source
      workspace: shared-workspace
  - name: deploy-config
    params:
    - name: is-config-directory
      value: $(params.is-config-directory)
    - name: is-infra-directory
      value: $(params.is-infra-directory)
    - name: is-configuration-keystore
      value: $(tasks.resolve-props.results.is-configuration-keystore)
    - name: is-configuration-truststore
      value: $(tasks.resolve-props.results.is-configuration-truststore)
    - name: is-configuration-setdbparms
      value: $(tasks.resolve-props.results.is-configuration-setdbparms)
    - name: is-configuration-serverconf
      value: $(tasks.resolve-props.results.is-configuration-serverconf)
    - name: is-configuration-policyproject
      value: $(tasks.resolve-props.results.is-configuration-policyproject)
    - name: is-configuration-loopbackdatasource
      value: $(tasks.resolve-props.results.is-configuration-loopbackdatasource)
    runAfter:
    - resolve-props
    - clone-is-config
    - clone-is-infra
    taskRef:
      kind: Task
      name: deploy-config
    workspaces:
    - name: workspace
      workspace: shared-workspace
  - name: deploy-is
    params:
    - name: is-infra-directory
      value: $(params.is-infra-directory)
    - name: IMAGE
      value: $(tasks.resolve-props.results.registry-host)/$(context.pipelineRun.namespace)/$(tasks.resolve-props.results.release-name):$(tasks.clone-is-source.results.commit)
    - name: release-name
      value: $(tasks.resolve-props.results.release-name)
    - name: configurations
      value: $(tasks.deploy-config.results.configurations)
    runAfter:
    - deploy-config
    - build-is-image
    taskRef:
      kind: Task
      name: deploy-is
    workspaces:
    - name: input
      workspace: shared-workspace
  - name: functional-test
    params:
    - name: is-source-directory
      value: $(params.is-source-directory)
    - name: release-name
      value: $(tasks.resolve-props.results.release-name)
    - name: endpoint-path
      value: $(tasks.resolve-props.results.endpoint-path)
    - name: previous-is-genenration
      value: $(tasks.resolve-props.results.previous-is-genenration)
    - name: previous-deployment-revision
      value: $(tasks.resolve-props.results.previous-deployment-revision)
    - name: key-certs-secret-name
      value: $(params.key-certs-secret-name)
    - name: client-key
      value: $(params.client-key)
    - name: client-cert
      value: $(params.client-cert)
    - name: ca-cert
      value: $(params.ca-cert)
    runAfter:
    - deploy-is
    taskRef:
      kind: Task
      name: functional-test
    workspaces:
    - name: workspace
      workspace: shared-workspace
  workspaces:
  - name: shared-workspace
